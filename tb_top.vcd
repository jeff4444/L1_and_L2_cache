$date
	Sun May  4 17:15:52 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_top $end
$var wire 1 ! mem_write $end
$var wire 1 " mem_ready $end
$var wire 1 # mem_read $end
$var wire 1 $ mem_hit $end
$var wire 128 % mem_data_out [127:0] $end
$var wire 128 & mem_data_in [127:0] $end
$var wire 11 ' mem_addr [10:0] $end
$var wire 1 ( l1_l2_write $end
$var wire 1 ) l1_l2_ready $end
$var wire 1 * l1_l2_read $end
$var wire 1 + l1_l2_hit $end
$var wire 128 , l1_l2_data_out [127:0] $end
$var wire 128 - l1_l2_data_in [127:0] $end
$var wire 11 . l1_l2_addr [10:0] $end
$var wire 1 / cpu_ready $end
$var wire 8 0 cpu_data_out [7:0] $end
$var parameter 32 1 ADDR_WIDTH $end
$var parameter 32 2 BLOCK_SIZE $end
$var parameter 32 3 CACHE_SIZE $end
$var parameter 32 4 DATA_WIDTH $end
$var parameter 32 5 NUM_WAYS $end
$var reg 1 6 clk $end
$var reg 11 7 cpu_addr [10:0] $end
$var reg 8 8 cpu_data_in [7:0] $end
$var reg 1 9 cpu_read $end
$var reg 1 : cpu_write $end
$var reg 1 ; rst_n $end
$scope module dut $end
$var wire 1 6 clk $end
$var wire 11 < cpu_addr [10:0] $end
$var wire 8 = cpu_data_in [7:0] $end
$var wire 1 9 cpu_read $end
$var wire 1 : cpu_write $end
$var wire 1 > l1_hit $end
$var wire 1 ; rst_n $end
$var wire 5 ? tag [4:0] $end
$var wire 1 ) l2_cache_ready $end
$var wire 1 + l2_cache_hit $end
$var wire 128 @ l2_cache_data_in [127:0] $end
$var wire 2 A index [1:0] $end
$var wire 4 B byte_offset [3:0] $end
$var parameter 32 C ADDR_WIDTH $end
$var parameter 32 D BLOCK_SIZE $end
$var parameter 32 E BYTE_OFFSET_WIDTH $end
$var parameter 32 F CACHE_SIZE $end
$var parameter 32 G DATA_WIDTH $end
$var parameter 32 H INDEX_WIDTH $end
$var parameter 32 I NUM_BLOCKS $end
$var parameter 32 J NUM_SETS $end
$var parameter 32 K NUM_WAYS $end
$var parameter 34 L TAG_WIDTH $end
$var reg 8 M cpu_data_out [7:0] $end
$var reg 1 / cpu_ready $end
$var reg 8 N data_found [7:0] $end
$var reg 1 O found $end
$var reg 1 P hit $end
$var reg 11 Q l2_cache_addr [10:0] $end
$var reg 128 R l2_cache_data_out [127:0] $end
$var reg 1 * l2_cache_read $end
$var reg 1 ( l2_cache_write $end
$var reg 1 S reading_from_l2 $end
$var reg 1 T updated $end
$var reg 2 U updated_way [1:0] $end
$var integer 32 V i [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 W j [31:0] $end
$upscope $end
$upscope $end
$scope module l2_inst $end
$var wire 1 6 clk $end
$var wire 11 X l2_cache_addr [10:0] $end
$var wire 128 Y l2_cache_data_in [127:0] $end
$var wire 1 * l2_cache_read $end
$var wire 1 ( l2_cache_write $end
$var wire 1 + l2_hit $end
$var wire 1 ; rst_n $end
$var wire 3 Z tag [2:0] $end
$var wire 1 " mem_ready $end
$var wire 1 $ mem_hit $end
$var wire 128 [ mem_data_in [127:0] $end
$var wire 4 \ index [3:0] $end
$var parameter 32 ] ADDR_WIDTH $end
$var parameter 2 ^ ALLOCATE $end
$var parameter 32 _ BLOCK_SIZE $end
$var parameter 32 ` BYTE_OFFSET_WIDTH $end
$var parameter 32 a CACHE_SIZE $end
$var parameter 2 b COMPARE_TAG $end
$var parameter 32 c DATA_WIDTH $end
$var parameter 2 d IDLE $end
$var parameter 32 e INDEX_WIDTH $end
$var parameter 32 f NUM_BLOCKS $end
$var parameter 32 g NUM_SETS $end
$var parameter 32 h NUM_WAYS $end
$var parameter 34 i TAG_WIDTH $end
$var parameter 2 j WRITE_BACK $end
$var reg 1 k found $end
$var reg 1 l hit $end
$var reg 128 m l2_cache_data_out [127:0] $end
$var reg 1 ) l2_cache_ready $end
$var reg 11 n mem_addr [10:0] $end
$var reg 128 o mem_data_out [127:0] $end
$var reg 1 # mem_read $end
$var reg 1 ! mem_write $end
$var reg 2 p next_state [1:0] $end
$var reg 2 q state [1:0] $end
$var reg 1 r updated $end
$var integer 32 s i [31:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 t j [31:0] $end
$upscope $end
$upscope $end
$scope module mem_inst $end
$var wire 11 u addr [10:0] $end
$var wire 1 6 clk $end
$var wire 128 v data_in [127:0] $end
$var wire 1 # read $end
$var wire 1 ; rst_n $end
$var wire 1 ! write $end
$var wire 11 w block_start [10:0] $end
$var parameter 32 x ADDR_WIDTH $end
$var parameter 32 y BLOCK_BITS $end
$var parameter 32 z BLOCK_SIZE $end
$var parameter 32 { DATA_WIDTH $end
$var parameter 43 | MEM_SIZE $end
$var reg 128 } data_out [127:0] $end
$var reg 1 $ hit $end
$var reg 1 " ready $end
$scope begin $ivl_for_loop2 $end
$var integer 32 ~ i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop3 $end
$var integer 32 !" i [31:0] $end
$upscope $end
$upscope $end
$scope task cpu_request $end
$var reg 11 "" addr [10:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000000000 |
b1000 {
b10000 z
b100 y
b1011 x
b10 j
b11 i
b100 h
b10000 g
b1000000 f
b100 e
b0 d
b1000 c
b1 b
b10000000000 a
b100 `
b10000 _
b11 ^
b1011 ]
b101 L
b100 K
b100 J
b10000 I
b10 H
b1000 G
b100000000 F
b100 E
b10000 D
b1011 C
b100 5
b1000 4
b100000000 3
b10000 2
b1011 1
$end
#0
$dumpvars
bx ""
bx !"
bx ~
bx }
bx0000 w
bx v
bx u
bx t
bx s
xr
bx q
bx p
bx o
bx n
bx m
xl
xk
bx \
bx [
bx Z
bx Y
bx X
bx W
b100 V
bx U
0T
xS
bx R
bx Q
xP
0O
b0 N
bx M
b0 B
b0 A
bx @
b0 ?
x>
b0 =
b0 <
0;
0:
09
b0 8
b0 7
06
bx 0
x/
bx .
bx -
bx ,
x+
x*
x)
x(
bx '
bx &
bx %
x$
x#
x"
x!
$end
#5
1r
0k
b0 U
1T
b0 \
b0 Z
b0 w
0+
b0 p
0S
b0 ,
b0 R
b0 Y
b0 .
b0 Q
b0 X
0(
0*
0/
b0 q
b0 &
b0 o
b0 v
b0 '
b0 n
b0 u
0!
0#
0l
0)
b0 %
b0 [
b0 }
0$
0"
b100000000000 ~
b100 t
b100 W
b100 V
b100 s
16
#10
06
#15
b100000000000 ~
b100 t
b100 W
b100 V
b10000 s
16
#20
b100 V
b1 B
19
b1 7
b1 <
b1 ""
06
1;
#25
b1 p
1S
b1 .
b1 Q
b1 X
1*
0>
0P
b0 -
b0 @
b0 m
16
#30
06
#35
b11 p
b1 q
16
#40
06
#45
b11 q
1#
16
#50
06
#55
1+
b0 p
1$
1"
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 %
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 [
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 }
b1 '
b1 n
b1 u
b10000 !"
16
#60
06
#65
b1 p
0r
1k
b0 q
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 -
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 @
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 m
1)
b0 '
b0 n
b0 u
0#
b10000 !"
b100 s
16
#70
06
#75
b0 B
b0 7
b0 <
b0 ""
b1 U
1T
b0 N
1O
b100 V
0+
b0 p
b0 -
b0 @
b0 m
0)
1>
1P
b1 0
b1 M
1/
0S
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 ,
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 R
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 Y
b0 .
b0 Q
b0 X
0*
b1 q
0$
0"
16
#80
06
#85
1+
b0 q
b0 0
b0 M
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 -
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 @
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 m
1)
1l
b10 N
b100 V
1O
b10 B
b10 7
b10 <
b10 ""
b100 s
16
#90
06
#95
0+
b0 -
b0 @
b0 m
0l
0)
b10 0
b10 M
b100 V
b101 N
1O
b101 B
b101 7
b101 <
b101 ""
16
#100
06
#105
b101 0
b101 M
b0 U
1T
b100 V
b0 N
0O
b1 A
b0 B
b10000 7
b10000 <
b10000 ""
16
#110
06
#115
1r
b100 s
0k
b1 \
b1 p
1S
b10000 .
b10000 Q
b10000 X
1*
0>
0P
0/
16
#120
06
#125
b11 p
b1 q
16
#130
06
#135
b10000 w
1#
b10000 '
b10000 n
b10000 u
b11 q
16
#140
06
#145
1+
b0 p
1$
1"
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 %
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 [
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 }
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 &
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 o
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 v
b10000 !"
16
#150
06
#155
0r
1k
b0 w
b1 p
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 -
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 @
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 m
1)
b0 &
b0 o
b0 v
b0 '
b0 n
b0 u
0#
b0 q
b10000 !"
b100 s
16
#160
06
#165
b100 B
b100 s
1k
b10100 7
b10100 <
b10100 ""
b1 U
1T
b10100 N
1O
b100 V
b0 \
0+
b0 p
b1 q
1>
1P
b10000 0
b10000 M
1/
0S
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 ,
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 R
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 Y
b0 .
b0 Q
b0 X
0*
b0 -
b0 @
b0 m
0)
0$
0"
16
#170
06
#175
1+
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 -
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 @
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 m
1)
1l
b10100 0
b10100 M
b0 q
b100 V
b11010 N
1O
b1010 B
b11010 7
b11010 <
b11010 ""
b100 s
16
#180
06
#185
0+
b11010 0
b11010 M
b0 -
b0 @
b0 m
0l
0)
1T
b100 V
b0 N
0O
b0 A
b1 B
b100 ?
b100000001 7
b100000001 <
b100000001 ""
16
#190
06
#195
b100 s
0k
b1 Z
b1 p
1S
b100000001 .
b100000001 Q
b100000001 X
1*
0>
0P
0/
16
#200
06
#205
b11 p
b1 q
16
#210
06
#215
b100000000 w
1#
b100000000 '
b100000000 n
b100000000 u
b11 q
16
#220
06
#225
1+
b0 p
1$
1"
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 %
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 [
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 }
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 &
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 o
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 v
b100000001 '
b100000001 n
b100000001 u
b10000 !"
16
#230
06
#235
1k
b100 s
b0 w
b1 p
1)
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 -
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 @
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 m
b0 &
b0 o
b0 v
b0 '
b0 n
b0 u
0#
b0 q
b10000 !"
16
#240
06
#245
b100 s
1k
09
b10 U
1T
b1 N
1O
b100 V
b0 Z
0+
b0 p
b1 q
1>
1P
b1 0
b1 M
1/
0S
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 ,
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 R
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 Y
b0 .
b0 Q
b0 X
0*
b0 -
b0 @
b0 m
0)
0$
0"
16
#250
06
#255
1+
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 -
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 @
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 m
1)
1l
b0 q
b100 s
16
#260
06
#265
0+
b0 -
b0 @
b0 m
0l
0)
16
#270
06
#275
16
#280
06
#285
16
#290
06
#295
16
