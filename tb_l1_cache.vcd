$date
	Sun May  4 00:49:46 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_l1_cache $end
$var wire 1 ! l2_cache_write $end
$var wire 1 " l2_cache_ready $end
$var wire 1 # l2_cache_read $end
$var wire 1 $ l2_cache_hit $end
$var wire 128 % l2_cache_data_out [127:0] $end
$var wire 128 & l2_cache_data_in [127:0] $end
$var wire 11 ' l2_cache_addr [10:0] $end
$var wire 1 ( cpu_ready $end
$var wire 8 ) cpu_data_out [7:0] $end
$var parameter 32 * ADDR_WIDTH $end
$var parameter 32 + BLOCK_SIZE $end
$var parameter 32 , CACHE_SIZE $end
$var parameter 32 - DATA_WIDTH $end
$var parameter 32 . NUM_WAYS $end
$var reg 1 / clk $end
$var reg 11 0 cpu_addr [10:0] $end
$var reg 8 1 cpu_data_in [7:0] $end
$var reg 1 2 cpu_read $end
$var reg 1 3 cpu_write $end
$var reg 1 4 rst_n $end
$scope module dut $end
$var wire 1 / clk $end
$var wire 11 5 cpu_addr [10:0] $end
$var wire 8 6 cpu_data_in [7:0] $end
$var wire 1 2 cpu_read $end
$var wire 1 3 cpu_write $end
$var wire 1 7 l1_hit $end
$var wire 1 4 rst_n $end
$var wire 5 8 tag [4:0] $end
$var wire 1 " l2_cache_ready $end
$var wire 1 $ l2_cache_hit $end
$var wire 128 9 l2_cache_data_in [127:0] $end
$var wire 2 : index [1:0] $end
$var wire 4 ; byte_offset [3:0] $end
$var parameter 32 < ADDR_WIDTH $end
$var parameter 32 = BLOCK_SIZE $end
$var parameter 32 > BYTE_OFFSET_WIDTH $end
$var parameter 32 ? CACHE_SIZE $end
$var parameter 32 @ DATA_WIDTH $end
$var parameter 32 A INDEX_WIDTH $end
$var parameter 32 B NUM_BLOCKS $end
$var parameter 32 C NUM_SETS $end
$var parameter 32 D NUM_WAYS $end
$var parameter 34 E TAG_WIDTH $end
$var reg 8 F cpu_data_out [7:0] $end
$var reg 1 ( cpu_ready $end
$var reg 8 G data_found [7:0] $end
$var reg 1 H found $end
$var reg 1 I hit $end
$var reg 11 J l2_cache_addr [10:0] $end
$var reg 128 K l2_cache_data_out [127:0] $end
$var reg 1 # l2_cache_read $end
$var reg 1 ! l2_cache_write $end
$var reg 1 L reading_from_l2 $end
$var reg 1 M updated $end
$var integer 32 N i [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 O j [31:0] $end
$upscope $end
$upscope $end
$scope module mem_inst $end
$var wire 11 P addr [10:0] $end
$var wire 1 / clk $end
$var wire 128 Q data_in [127:0] $end
$var wire 1 # read $end
$var wire 1 4 rst_n $end
$var wire 1 ! write $end
$var wire 11 R block_start [10:0] $end
$var parameter 32 S ADDR_WIDTH $end
$var parameter 32 T BLOCK_BITS $end
$var parameter 32 U BLOCK_SIZE $end
$var parameter 32 V DATA_WIDTH $end
$var parameter 43 W MEM_SIZE $end
$var reg 128 X data_out [127:0] $end
$var reg 1 $ hit $end
$var reg 1 " ready $end
$scope begin $ivl_for_loop2 $end
$var integer 32 Y i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop3 $end
$var integer 32 Z i [31:0] $end
$upscope $end
$upscope $end
$scope task cpu_request $end
$var reg 11 [ addr [10:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000000000 W
b1000 V
b10000 U
b100 T
b1011 S
b101 E
b100 D
b100 C
b10000 B
b10 A
b1000 @
b100000000 ?
b100 >
b10000 =
b1011 <
b100 .
b1000 -
b100000000 ,
b10000 +
b1011 *
$end
#0
$dumpvars
bx [
bx Z
bx Y
bx X
bx0000 R
bx Q
bx P
bx O
b100 N
0M
xL
bx K
bx J
xI
0H
b0 G
bx F
b0 ;
b0 :
bx 9
b0 8
x7
b0 6
b0 5
04
03
02
b0 1
b0 0
0/
bx )
x(
bx '
bx &
bx %
x$
x#
x"
x!
$end
#5
1M
b0 R
0L
b0 %
b0 K
b0 Q
b0 '
b0 J
b0 P
0!
0#
1(
b0 &
b0 9
b0 X
0$
1"
b100000000000 Y
b100 O
b100 N
1/
#10
0/
#15
b100000000000 Y
b100 O
b100 N
1/
#20
b100 N
b1 ;
12
b1 0
b1 5
b1 [
0/
14
#25
1L
b1 '
b1 J
b1 P
1#
07
0I
0(
0"
1/
#30
0/
#35
1$
1"
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 &
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 9
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 X
b10000 Z
1/
#40
0/
#45
b0 ;
b0 0
b0 5
b0 [
0M
b0 G
1H
17
1I
b1 )
b1 F
1(
0L
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 %
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 K
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 Q
b0 '
b0 J
b0 P
0#
b10000 Z
b100 N
1/
#50
0/
#55
b0 )
b0 F
0$
0"
b10 G
b100 N
1H
b10 ;
b10 0
b10 5
b10 [
1/
#60
0/
#65
b10 )
b10 F
b100 N
b101 G
1H
b101 ;
b101 0
b101 5
b101 [
1/
#70
0/
#75
b101 )
b101 F
1M
b100 N
b0 G
0H
b1 :
b0 ;
b10000 0
b10000 5
b10000 [
1/
#80
0/
#85
b10000 R
1L
b10000 '
b10000 J
b10000 P
1#
07
0I
0(
1/
#90
0/
#95
1$
1"
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 &
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 9
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 X
b10000 Z
1/
#100
0/
#105
b100 ;
b10100 0
b10100 5
b10100 [
0M
b10100 G
1H
b0 R
17
1I
b10000 )
b10000 F
1(
0L
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 %
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 K
b11111000111100001110100011100000110110001101000011001000110000001011100010110000101010001010000010011000100100001000100010000 Q
b0 '
b0 J
b0 P
0#
b10000 Z
b100 N
1/
#110
0/
#115
b10100 )
b10100 F
0$
0"
b100 N
b11010 G
1H
b1010 ;
b11010 0
b11010 5
b11010 [
1/
#120
0/
#125
b11010 )
b11010 F
b100 N
b0 G
0H
b0 :
b1 ;
b100 8
b100000001 0
b100000001 5
b100000001 [
1/
#130
0/
#135
b100000000 R
1L
b100000001 '
b100000001 J
b100000001 P
1#
07
0I
0(
1/
#140
0/
#145
1$
1"
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 &
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 9
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 X
b10000 Z
1/
#150
0/
#155
b1 G
1H
b0 R
17
1I
b1 )
b1 F
1(
0L
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 %
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 K
b1111000011100000110100001100000010110000101000001001000010000000011100000110000001010000010000000011000000100000000100000000 Q
b0 '
b0 J
b0 P
0#
b10000 Z
b100 N
1/
#160
0/
#165
0$
0"
1/
#170
0/
#175
1/
#180
0/
#185
1/
#190
0/
#195
1/
#200
0/
#205
1/
